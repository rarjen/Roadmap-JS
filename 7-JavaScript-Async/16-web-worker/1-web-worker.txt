Thread di JavaScript
● JavaScript adalah Single Thread (Single Proses), artinya walaupun proses yang kita buat adalah 
Async, tapi tetap akan dijalankan dalam Thread (Proses) yang sama.
● Kemampuan satu Thread dalam mengelola beberapa pekerjaan, dinamakan Concurrent.
● Kemampuan menjalankan beberapa Thread untuk mengelola satu atau lebih pekerjaan, dinamakan 
Paralel. 
● Dan untuk membuat proses secara Paralel, kita bisa menggunakan Web Worker
Note :
- Secara default Asynchronous, Fetch API, Promise semuanya berjalan Concurrent
- Misal kita mempunyai kode yg ternyata kode nya sangat lambat, jika menggunakan default Concurrent, browser bisa
hang.
- Kita bisa menjalankan kode yg lambat tadi secara Paralel agar tdk hang

Web Worker
● Web Worker adalah kemampuan yang untuk menjalankan proses di Thread yang berbeda 
dibanding Main Thread. 
● Keuntungan menggunakan Web Worker adalah, jika terdapat proses yang membutuhkan waktu 
lama, Web kita tidak akan Freeze, karena proses tersebut bisa kita jalankan di Thread yang 
berbeda dari Main Thread (yang biasa digunakan oleh UI)
● https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API

Worker
● Untuk menggunakan Web Worker API, kita bisa membuat object Worker
● https://developer.mozilla.org/en-US/docs/Web/API/Worker
● Saat kita membuat object Worker, Worker tidak akan secara otomatis berjalan, melainkan kita 
perlu memberi perintah dengan cara mengirim pesan
● Untuk mengirim pesan, kita bisa gunakan method postMessage()
● Sedangkan untuk menerima balasan dari worker, kita bisa menggunakan event listener onmessage
● Data yang diterima adalah object MessageEvent
● https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent
